{"version":3,"sources":["App.js","index.js"],"names":["area","require","is_point_in_poly","Canvas","props","myRef","React","createRef","image","propHeight","propWidth","lastItemSelected","isNothingSelected","isIn","isOut","current","this","getContext","clearRect","width","height","src","id","string","points","split","poly","coordinates","xcoor","parseInt","ycoor","push","stroke","line_width","ctx","path","Path2D","i","length","lineTo","strokeStyle","lineWidth","is_in_array","is_out_array","nheight","Math","ceil","nwidth","drawImage","item_obj","item","Object","keys","drawPoly","onItemSelected","onItemDeselected","sel_img","x","y","polygons","generatePolygon","new_is_in","slice","smallest_index","smallest","item_smallest","points_smallest","splice","Image","onmousemove","e","selected_image","offsetX","offsetY","isPointInPoly","drawCanvas","onmouseout","onload","clear","class","ref","Component","Selection","selected_item","FacImage","alt","onClick","Slider","selectedOptionString","selected_option","result_images","img_list","renderFacImage","Option","value","Choise","list","options","map","option","name","onChange","App","state","error","isLoaded","fetch","then","res","json","result","setState","last_item","target","handleChange","handleClick","handleItemSelected","handleItemDeselected","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89169b6b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nvar area = require('area-polygon');\r\nvar is_point_in_poly = require(\"robust-point-in-polygon\");\r\n\r\nclass Canvas extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n        this.image = null;\r\n        this.propHeight = null;\r\n        this.propWidth = null;\r\n        this.lastItemSelected = null;\r\n        this.isNothingSelected = null;\r\n        this.isIn = null;\r\n        this.isOut = null;\r\n    }\r\n\r\n    clear (){\r\n        const current = this.myRef.current;\r\n        const ctx = current.getContext(\"2d\");\r\n        \r\n        ctx.clearRect(0,0, current.width, current.height);\r\n        this.image.src = \"\";\r\n        this.image.id = \"\";\r\n    }\r\n\r\n    generatePolygon (string) {\r\n        if (string === \"\"){\r\n            return;\r\n        }\r\n        var points = string.split(\" \");\r\n        var poly  =  [];\r\n\r\n        for (var coordinates of points){\r\n            var xcoor = parseInt(coordinates.split(\",\")[0]) / this.propWidth;\r\n            var ycoor = parseInt(coordinates.split(\",\")[1]) / this.propHeight;\r\n                \r\n            poly.push ([xcoor, ycoor]);\r\n        }\r\n        return poly;  \r\n    }\r\n\r\n    drawPoly(points, stroke, line_width){\r\n\r\n        const current = this.myRef.current;\r\n        const ctx = current.getContext(\"2d\");\r\n\r\n        var path = new Path2D();\r\n\r\n        for (var i=0; i<points.length; i++){\r\n            var xcoor = points[i][0];\r\n            var ycoor = points[i][1];\r\n            \r\n            path.lineTo(xcoor,ycoor);\r\n        }\r\n\r\n        ctx.strokeStyle = stroke;\r\n        ctx.lineWidth = line_width;\r\n        ctx.stroke(path);\r\n    }\r\n\r\n    drawCanvas(is_in_array, is_out_array) {\r\n        \r\n        const current = this.myRef.current;\r\n        const ctx = current.getContext(\"2d\");\r\n\r\n        var nheight = Math.ceil(this.image.height / this.propHeight);\r\n        var nwidth = Math.ceil(this.image.width / this.propWidth);\r\n\r\n        ctx.clearRect(0,0, current.width, current.height);\r\n        ctx.drawImage(this.image, 0,0, nwidth, nheight);\r\n\r\n        if (is_out_array.length > 0){\r\n            for (var i=0; i<is_out_array.length; i++){\r\n                var item_obj = is_out_array[i];\r\n                var item = Object.keys(item_obj)[0];\r\n                var points = item_obj[item];\r\n                \r\n                //this.drawPoly(points, \"black\", \"2\");\r\n            }\r\n        }\r\n\r\n        if (is_in_array.length === 1){\r\n            item_obj = is_in_array[0];\r\n            item = Object.keys(item_obj)[0];\r\n            points = item_obj[item];\r\n                \r\n            this.drawPoly(points, \"red\", \"4\"); \r\n            \r\n            this.isNothingSelected = false;\r\n            this.lastItemSelected = this.props.onItemSelected(item, this.lastItemSelected);\r\n        }\r\n        \r\n        /*if (is_in_array.length === 1){\r\n            var item_obj = is_in_array[0];\r\n            var item = Object.keys(item_obj)[0];\r\n            var points = item_obj[item];\r\n                \r\n            this.drawPoly(points, \"red\", \"4\"); \r\n            \r\n            this.isNothingSelected = false;\r\n            this.lastItemSelected = this.props.onItemSelected(item, this.lastItemSelected);\r\n        }\r\n\r\n        if (is_out_array.length > 0){\r\n            for (var i=0; i<is_out_array.length; i++){\r\n                item_obj = is_out_array[i];\r\n                item = Object.keys(item_obj)[0];\r\n                points = item_obj[item];\r\n                \r\n                this.drawPoly(points, \"black\", \"2\");\r\n            }\r\n        }*/\r\n\r\n\r\n        if (this.isNothingSelected){\r\n            this.lastItemSelected = this.props.onItemDeselected(this.lastItemSelected);\r\n        }\r\n    }\r\n    \r\n    isPointInPoly(sel_img, x, y){\r\n        var polygons = sel_img.polygons;\r\n        this.isIn = [];\r\n        this.isOut = [];\r\n        \r\n        for (var item in polygons){\r\n            var poly = this.generatePolygon(polygons[item]);\r\n            var item_obj = {};\r\n\r\n            if (is_point_in_poly(poly, [x, y]) === -1 || is_point_in_poly(poly, [x, y]) === 0) {\r\n                item_obj[item] = poly;\r\n                this.isIn.push (item_obj); \r\n            } else {\r\n                item_obj[item] = poly;\r\n                this.isOut.push (item_obj);\r\n            }\r\n        }\r\n\r\n        if (this.isIn.length > 1){\r\n            var new_is_in = this.isIn.slice();\r\n            var smallest_index = 0;\r\n            var smallest = this.isIn[smallest_index];\r\n            var item_smallest = Object.keys(smallest)[0];\r\n            var points_smallest = smallest[item_smallest];\r\n            for (var i=1; i<this.isIn.length; i++){\r\n                var item_obj = this.isIn[i];\r\n                var item = Object.keys(item_obj)[0];\r\n                var points = item_obj[item];\r\n                if (area(points) < area(points_smallest) || area(points) === area(points_smallest)){\r\n                    new_is_in.splice(smallest_index, 1);\r\n                    this.isOut.push(smallest);\r\n                    smallest_index = i;\r\n                    smallest = this.isIn[smallest_index];\r\n                    item_smallest = Object.keys(smallest)[0];\r\n                    points_smallest = smallest[item_smallest];\r\n                } else{\r\n                    new_is_in.splice(i,1);\r\n                    this.isOut.push(item_obj);\r\n                }\r\n            }\r\n            this.isIn = new_is_in;\r\n        }\r\n    }  \r\n\r\n    componentDidMount () {\r\n        this.myRef.current.height = 600;\r\n        this.myRef.current.width = 500;\r\n        this.image = new Image();\r\n\r\n        this.myRef.current.onmousemove = (e) => { \r\n            if (Object.keys(this.props.selected_image).length === 0) { \r\n                return;\r\n            }\r\n            this.isNothingSelected = true;\r\n            var x = e.offsetX;\r\n            var y = e.offsetY;\r\n            this.isPointInPoly(this.props.selected_image, x, y);\r\n            this.drawCanvas(this.isIn, this.isOut);\r\n        }\r\n\r\n        this.myRef.current.onmouseout = () => {\r\n            if (Object.keys(this.props.selected_image).length === 0) { \r\n                return;\r\n            }\r\n            this.isNothingSelected = true;\r\n            this.isPointInPoly(this.props.selected_image, -1, -1,);\r\n            this.drawCanvas(this.isIn, this.isOut);\r\n        }\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (Object.keys(this.props.selected_image).length > 0) { \r\n            if (this.props.selected_image.src !== this.image.src) {\r\n                this.image.src = this.props.selected_image.src;\r\n                this.image.id = this.props.selected_image.id;\r\n\r\n                this.image.onload = () => {\r\n                    this.propHeight = Math.ceil(this.image.height/ this.myRef.current.height);\r\n                    this.propWidth =  Math.ceil(this.image.width /this.myRef.current.width);\r\n                    this.isPointInPoly(this.props.selected_image, -1, -1);\r\n                    this.drawCanvas(this.isIn, this.isOut);\r\n                } \r\n           }\r\n        } else {\r\n            this.clear();\r\n        }\r\n    }\r\n\r\n    render (){\r\n        return(\r\n            <canvas class = \"canvas\" ref={this.myRef} >\r\n            </canvas>\r\n        );\r\n    }\r\n}\r\n\r\nclass Selection extends React.Component{\r\n    render (){\r\n         return (\r\n                <div class = \"selection\">\r\n                    <p>{this.props.selected_item}</p>\r\n                </div>\r\n         );\r\n    }\r\n}\r\n\r\nclass FacImage extends React.Component{\r\n    render(){\r\n        return(\r\n                <div class = \"fac_img\">\r\n                    <img id = {this.props.id} src = {this.props.src} alt = {this.props.id} onClick = {this.props.onClick}/>\r\n                    <p>{this.props.id}</p>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Slider extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectedOptionString = null;\r\n    }\r\n\r\n    componentDidUpdate (){\r\n        if(this.props.selected_option !== \"\"){\r\n            this.selectedOptionString = this.props.selected_option + \" è presente nelle seguenti carte: \"\r\n        }\r\n    }\r\n\r\n    renderFacImage(i){\r\n        return (\r\n            \r\n            <FacImage\r\n                src = {this.props.result_images[i].src}     \r\n                id = {this.props.result_images[i].id}    \r\n                onClick = {() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n       \r\n        const result_images = this.props.result_images;\r\n        const img_list = [];\r\n        for (var i = 0; i<result_images.length; i++){\r\n           img_list.push(this.renderFacImage(i));\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div class = 'slider'>\r\n                <p>{this.selectedOptionString}</p>\r\n               \r\n                {img_list}\r\n              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Option extends React.Component{\r\n    render(){\r\n        return(\r\n            <option id = {this.props.value}>\r\n                {this.props.value}\r\n            </option>\r\n        );\r\n    }\r\n}\r\n\r\nclass Choise extends React.Component {\r\n\r\n    render() {\r\n        const options = this.props.options;\r\n        const list = options.map((option) => <Option \r\n                                                value = {option}\r\n                                            />);\r\n        return (\r\n            \r\n            <select \r\n                name = 'persons'\r\n                id=\"persons\"\r\n                value = {this.props.selected_option}\r\n                onChange = {this.props.onChange}\r\n            >\r\n                {list}\r\n                \r\n            </select>\r\n        );\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor (props) { \r\n        super(props); \r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            options: [],\r\n            selected_option: \"\",\r\n            result_images : [],\r\n            selected_image: {},\r\n            selected_item: \"\"\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"http://localhost:8080/imgTags\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        options: result,\r\n                        selected_option: result[0]\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n          )\r\n\r\n    }\r\n\r\n    handleItemDeselected(last_item){\r\n        last_item = null;\r\n        this.setState({\r\n            selected_item: \"\"\r\n        }); \r\n        return last_item;\r\n    }\r\n\r\n    handleItemSelected(item, last_item){\r\n        if(last_item !== item) {\r\n           last_item = item;\r\n            this.setState({\r\n                selected_item: item\r\n            }); \r\n        }\r\n        return last_item;\r\n    }\r\n\r\n    handleClick(i){\r\n        this.setState({\r\n            selected_image: this.state.result_images[i]\r\n        });   \r\n    }\r\n    \r\n    handleChange(e){\r\n        this.setState ({\r\n            selected_option: e.target.value,\r\n            selected_image: {}\r\n        });\r\n\r\n        fetch(\"http://localhost:8080/imgResults/\"+ e.target.value)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    \r\n                    this.setState({ \r\n                        \r\n                        result_images: result\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n\r\n       \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"app\">\r\n                <div class=\"choise\">\r\n                    Seleziona un individuo: \r\n                    <Choise \r\n                        options = {this.state.options}\r\n                        selected_option = {this.state.selected_option}\r\n                        onChange = {(e) => this.handleChange(e)}\r\n                    />\r\n                </div>\r\n\r\n\r\n                <Slider\r\n                    selected_option = {this.state.selected_option}\r\n                    result_images = {this.state.result_images}\r\n                    onClick = {(i) => this.handleClick(i)}\r\n                />\r\n            \r\n               <Canvas\r\n                    selected_image = {this.state.selected_image}\r\n                    onItemSelected = {(item, last_item) => this.handleItemSelected(item, last_item)}\r\n                    onItemDeselected = {(last_item) => this.handleItemDeselected(last_item)}\r\n               />\r\n            \r\n               <Selection\r\n                    selected_item = {this.state.selected_item}\r\n               />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './App.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}